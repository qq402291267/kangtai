//
//
/**
 * Copyright (c) www.bugull.com
 */
//
//

#import "AddCountDownVC.h"
#import "ZQCustomTimePicker.h"

@interface AddCountDownVC ()

{
    ZQCustomTimePicker *timePicker;
}

@property(nonatomic,assign)UInt8 hour;

@property(nonatomic,assign)UInt8 min;

@property(nonatomic,assign)UInt8 flag;

@property (nonatomic, assign)BOOL isOFF;

@end

@implementation AddCountDownVC

- (id)initWithNibName:(NSString *)nibNameOrNil bundle:(NSBundle *)nibBundleOrNil
{
    self = [super initWithNibName:nibNameOrNil bundle:nibBundleOrNil];
    if (self) {
        // Custom initialization
    }
    return self;
}

- (void)viewDidLoad
{
    [super viewDidLoad];
    
    [self loadUI];
    
    // Do any additional setup after loading the view.
}

#pragma mark-
#pragma mark-UI
- (void)loadUI
{
    
    self.flag = 0x80;
    self.titlelab.text = NSLocalizedString(@"Add Count Down", nil);
    self.titlelab.bounds = CGRectMake(0, 0, 200, 40);
    self.view.backgroundColor = RGBA(248.0, 248.0, 248.0, 1.0);
    
    UIView *leftView = [[UIView alloc] initWithFrame:CGRectMake(0, self.barView.frame.size.height, 90, kScreen_Height - self.barView.frame.size.height)];
    leftView.backgroundColor = RGBA(242.0, 242.0, 242.0, 1.0);
    [self.view addSubview:leftView];
    UIView *firstLineView = [[UIView alloc] initWithFrame:CGRectMake(leftView.frame.size.width, (int)(kScreen_Height - self.barView.frame.size.height) / 2 + 34, kScreen_Width - leftView.frame.size.width, 1)];
    firstLineView.backgroundColor = RGBA(220.0, 220.0, 220.0, 1.0);
    [self.view addSubview:firstLineView];
    UIView *secondLineView = [[UIView alloc] initWithFrame:CGRectMake(leftView.frame.size.width, (int)(kScreen_Height - self.barView.frame.size.height) / 2 + 114, kScreen_Width - leftView.frame.size.width, 1)];
    secondLineView.backgroundColor = RGBA(220.0, 220.0, 220.0, 1.0);
    [self.view addSubview:secondLineView];
    
    UILabel *afterLab = [[UILabel alloc] initWithFrame:CGRectMake(13, self.barView.frame.size.height - 44 + firstLineView.frame.origin.y / 2, 80, 40)];
    afterLab.backgroundColor = [UIColor clearColor];
    afterLab.font = [UIFont systemFontOfSize:18];
    afterLab.text = NSLocalizedString(@"After",nil);
    afterLab.numberOfLines = 0;
    afterLab.textColor = RGBA(0.0, 0.0, 0.0, 1.0);
    [self.view addSubview:afterLab];
    
    UILabel *powerLab = [[UILabel alloc] initWithFrame:CGRectMake(13, (firstLineView.frame.origin.y + secondLineView.frame.origin.y) / 2 - 21, 80, 40)];
    powerLab.backgroundColor = [UIColor clearColor];
    powerLab.font = [UIFont systemFontOfSize:18];
    powerLab.text = NSLocalizedString(@"Power", nil);
    powerLab.numberOfLines = 0;
    powerLab.textColor = RGBA(0.0, 0.0, 0.0, 1.0);
    [self.view addSubview:powerLab];
    
    UIButton *switchButt = [UIButton buttonWithType:UIButtonTypeCustom];
    switchButt.frame = CGRectMake(leftView.frame.size.width + 25, powerLab.center.y - 30, 65, 65);
    [switchButt addTarget:self action:@selector(switchButtDeviceMethod:) forControlEvents:UIControlEventTouchUpInside];
    [switchButt setImage:[UIImage imageNamed:@"power__off_big.png"] forState:UIControlStateNormal];
    [switchButt setTitleColor:[UIColor blackColor] forState:UIControlStateNormal];
    [self.view addSubview:switchButt];
    
    float pickerF = (kScreen_Height == 480) ? 5 : 28;
    float x = (float)kScreen_Width / 320;
    float y = (float)kScreen_Height / 568;
    float h = (kScreen_Width > 320) ? y : 1;
    
    timePicker = [[ZQCustomTimePicker alloc] initWithFrame:CGRectMake((leftView.frame.size.width + 20) * x, (barViewHeight + pickerF) * h + ((iOS_version < 7.0) ? 17 : 0), 205, 170) withIsZero:YES];
    [self.view addSubview:timePicker];
}

#pragma mark-
#pragma mark-转换GMT+0时间

- (void)changeStringToDate
{
    NSDateFormatter * dateformatter = [[NSDateFormatter alloc] init];
    [dateformatter setTimeZone:[NSTimeZone systemTimeZone]];
    [dateformatter setFormatterBehavior:NSDateFormatterBehaviorDefault];
    
    [dateformatter setDateFormat:@"yyyy-MM-dd HH:mm:ss"];
    NSString * str = [NSString stringWithFormat:@"%@",[NSDate date]];
//    NSString * str = [NSString stringWithFormat:@"%@",[NSDate date]];
    NSArray *array = [str componentsSeparatedByString:@" "];
    
    NSString *time = [array objectAtIndex:1];
    
    
    NSArray *tempArr = [time componentsSeparatedByString:@":"];
    int tempHour = self.hour + [[tempArr objectAtIndex:0] intValue];
    int tempMin = self.min + [[tempArr objectAtIndex:1] intValue];
    
    NSLog(@"=== %d", tempHour);
    
    if (tempMin >= 59) {
        tempHour =  tempHour + 1;
        
        self.min = tempMin-59;
    }
    else
    {
        self.min = tempMin;
    }
    if (tempHour >=24)
    {
        self.hour = tempHour - 24;
        [[NSUserDefaults standardUserDefaults] setObject:@"1" forKey:[NSString stringWithFormat:@"%@1", self.macString]];
    }
    else
    {
        self.hour = tempHour;
        [[NSUserDefaults standardUserDefaults] setObject:@"0" forKey:[NSString stringWithFormat:@"%@1", self.macString]];
    }
    [[NSUserDefaults standardUserDefaults] synchronize];
}

- (NSArray *)loadDataWithDate:(NSDate *)date WithDateOrTime:(BOOL)isDate
{
    NSDateComponents *components = [[NSCalendar currentCalendar] components:NSDayCalendarUnit | NSMonthCalendarUnit | NSYearCalendarUnit |NSCalendarUnitMinute |NSCalendarUnitSecond | NSCalendarUnitHour fromDate:date];
    
    NSDateFormatter* dateFo = [[NSDateFormatter alloc] init];//实例化一个NSDateFormatter对象
    
    [dateFo setDateFormat:@"yyyy-MM-dd HH:mm:ss"];//设定时间格式,这里可以设置成自己需要的格式
    
    
    NSDate *datessss =[dateFo dateFromString:[NSString stringWithFormat:@"2014-07-02 %ld:%ld:%ld",(long)[components hour],(long)[components minute],(long)[components second]]];
    
    dateFo.timeZone = [NSTimeZone timeZoneForSecondsFromGMT:0];//这就是GMT+0时区了
    NSString *dateString = [dateFo stringFromDate:datessss];
    
    
    NSArray *array =  [dateString componentsSeparatedByString:@" "];
    
    NSString *daString =  [array objectAtIndex:0];
    
    NSString *timeString =  [array objectAtIndex:1];
    
    NSArray *dateArray =  [daString componentsSeparatedByString:@"-"];
    //    self.dateDD = [[dateArray objectAtIndex:2] intValue];
    NSArray *timeArray =  [timeString componentsSeparatedByString:@":"];
    
    if (isDate == YES) {
        return dateArray;
    }
    else{
        return timeArray;
    }
    
    return nil;
}

#pragma mark-
#pragma mark-Click

- (void)reloadButtonMethod:(UIButton *)sender
{
    self.hour = timePicker.hourPicker.currentItemIndex;
    self.min = timePicker.minutePicker.currentItemIndex;
    [[NSUserDefaults standardUserDefaults] setObject:[NSString stringWithFormat:@"%d",self.min] forKey:[NSString stringWithFormat:@"1%@1",self.macString]];
    [[NSUserDefaults standardUserDefaults] synchronize];
        
    if (self.hour == 0 && self.min == 0) {
        [Util showAlertWithTitle:NSLocalizedString(@"Tips", nil) msg:NSLocalizedString(@"Chosen time error", nil)];
        return;
    }
    [self changeStringToDate];
        
    Device *device = [[DeviceManagerInstance getlocalDeviceDictary] objectForKey:self.macString];
    [DeviceManagerInstance setTimeringAlermWithMacString:device.mac Withhost:device.host flag:self.flag Hour:self.hour min:self.min TaskCount:0x0b Switch:self.isOFF key:device.key With:device.localContent deviceType:device.deviceType];
    
    [self.navigationController popViewControllerAnimated:YES];
}

- (void)switchButtDeviceMethod:(UIButton *)butt
{
    BOOL isSelected = !butt.isSelected;
    [butt setSelected:isSelected];
    
    if (isSelected) {
        
        [butt setImage:[UIImage imageNamed:@"power__on_big.png"] forState:UIControlStateNormal];
        self.isOFF = YES;
    }else{
        [butt setImage:[UIImage imageNamed:@"power__off_big.png"] forState:UIControlStateNormal];
        self.isOFF = NO;
    }
}

- (void)leftButtonMethod:(UIButton *)but
{
    [self.navigationController popViewControllerAnimated:YES];
}

- (void)didReceiveMemoryWarning
{
    [super didReceiveMemoryWarning];
    // Dispose of any resources that can be recreated.
}

@end
